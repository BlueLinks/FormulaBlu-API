name: Build and Push Docker Images

on:
    push:
        branches: [main]
    pull_request:
        types: [closed]
        branches: [main]

env:
    DOCKER_REGISTRY: ${{ secrets.DOCKER_REGISTRY || 'docker.io' }}
    DOCKER_NAMESPACE: ${{ secrets.DOCKER_NAMESPACE || 'formulablu' }}

jobs:
    build-and-push:
        runs-on: ubuntu-latest

        # Only run on push to main or when PR is merged to main
        if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.pull_request.merged == true)

        steps:
            - name: Validate required secrets
              run: |
                  if [ -z "${{ secrets.DOCKERHUB_USERNAME }}" ]; then
                      echo "❌ DOCKERHUB_USERNAME secret is required but not set"
                      exit 1
                  fi
                  if [ -z "${{ secrets.DOCKERHUB_TOKEN }}" ]; then
                      echo "❌ DOCKERHUB_TOKEN secret is required but not set"
                      exit 1
                  fi
                  echo "✅ All required secrets are available"

            - name: Checkout code
              uses: actions/checkout@v4
              with:
                  submodules: recursive
                  token: ${{ secrets.GITHUB_TOKEN }}

            - name: Set up JDK 21
              uses: actions/setup-java@v4
              with:
                  java-version: "21"
                  distribution: "temurin"

            - name: Cache Gradle packages
              uses: actions/cache@v4
              with:
                  path: |
                      ~/.gradle/caches
                      ~/.gradle/wrapper
                  key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
                  restore-keys: |
                      ${{ runner.os }}-gradle-

            - name: Make gradlew executable
              run: chmod +x formulaBlu/gradlew

            - name: Build all APIs
              run: |
                  cd formulaBlu
                  ./gradlew build --no-daemon

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Log in to Docker Hub
              uses: docker/login-action@v3
              with:
                  registry: ${{ env.DOCKER_REGISTRY }}
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}

            - name: Extract metadata
              id: meta
              uses: docker/metadata-action@v5
              with:
                  images: |
                      formulablu/drivers-api
                      formulablu/teams-api
                      formulablu/tracks-api
                      formulablu/races-api
                      formulablu/seasons-api
                      formulablu/events-api
                      formulablu/results-api
                      formulablu/api-gateway
                  tags: |
                      type=ref,event=branch
                      type=ref,event=pr
                      type=sha,prefix={{branch}}-
                      type=raw,value=latest,enable={{is_default_branch}}

            - name: Build and push drivers-api
              uses: docker/build-push-action@v5
              with:
                  context: ./formulaBlu
                  file: ./formulaBlu/drivers-api/Dockerfile
                  push: true
                  tags: formulablu/drivers-api:latest,formulablu/drivers-api:${{ github.sha }}
                  cache-from: type=gha
                  cache-to: type=gha,mode=max

            - name: Build and push teams-api
              uses: docker/build-push-action@v5
              with:
                  context: ./formulaBlu
                  file: ./formulaBlu/teams-api/Dockerfile
                  push: true
                  tags: formulablu/teams-api:latest,formulablu/teams-api:${{ github.sha }}
                  cache-from: type=gha
                  cache-to: type=gha,mode=max

            - name: Build and push tracks-api
              uses: docker/build-push-action@v5
              with:
                  context: ./formulaBlu
                  file: ./formulaBlu/tracks-api/Dockerfile
                  push: true
                  tags: formulablu/tracks-api:latest,formulablu/tracks-api:${{ github.sha }}
                  cache-from: type=gha
                  cache-to: type=gha,mode=max

            - name: Build and push races-api
              uses: docker/build-push-action@v5
              with:
                  context: ./formulaBlu
                  file: ./formulaBlu/races-api/Dockerfile
                  push: true
                  tags: formulablu/races-api:latest,formulablu/races-api:${{ github.sha }}
                  cache-from: type=gha
                  cache-to: type=gha,mode=max

            - name: Build and push seasons-api
              uses: docker/build-push-action@v5
              with:
                  context: ./formulaBlu
                  file: ./formulaBlu/seasons-api/Dockerfile
                  push: true
                  tags: formulablu/seasons-api:latest,formulablu/seasons-api:${{ github.sha }}
                  cache-from: type=gha
                  cache-to: type=gha,mode=max

            - name: Build and push events-api
              uses: docker/build-push-action@v5
              with:
                  context: ./formulaBlu
                  file: ./formulaBlu/events-api/Dockerfile
                  push: true
                  tags: formulablu/events-api:latest,formulablu/events-api:${{ github.sha }}
                  cache-from: type=gha
                  cache-to: type=gha,mode=max

            - name: Build and push results-api
              uses: docker/build-push-action@v5
              with:
                  context: ./formulaBlu
                  file: ./formulaBlu/results-api/Dockerfile
                  push: true
                  tags: formulablu/results-api:latest,formulablu/results-api:${{ github.sha }}
                  cache-from: type=gha
                  cache-to: type=gha,mode=max

            - name: Build and push api-gateway
              uses: docker/build-push-action@v5
              with:
                  context: ./formulaBlu
                  file: ./formulaBlu/api-gateway/Dockerfile
                  push: true
                  tags: formulablu/api-gateway:latest,formulablu/api-gateway:${{ github.sha }}
                  cache-from: type=gha
                  cache-to: type=gha,mode=max

            - name: Update deployment manifests
              run: |
                  # Update Kubernetes deployment files with new image tags
                  cd ../FormulaBlu-Deployments

                  # Update each API deployment with the new image tag
                  for api in drivers-api teams-api tracks-api races-api seasons-api events-api results-api api-gateway; do
                    if [ -f "modules/$api/${api}-deployment.yaml" ]; then
                      sed -i "s|image: formulablu/$api:.*|image: formulablu/$api:${{ github.sha }}|g" "modules/$api/${api}-deployment.yaml"
                      echo "Updated $api deployment with image tag: ${{ github.sha }}"
                    fi
                  done

                  # Commit and push changes to deployment repo
                  git config --local user.email "action@github.com"
                  git config --local user.name "GitHub Action"
                  git add .
                  git diff --staged --quiet || git commit -m "Update image tags to ${{ github.sha }} [skip ci]"
                  git push origin main || echo "No changes to commit or push failed"

            - name: Summary
              run: |
                  echo "## 🐳 Docker Images Built and Pushed Successfully!" >> $GITHUB_STEP_SUMMARY
                  echo "" >> $GITHUB_STEP_SUMMARY
                  echo "### Images pushed to Docker Hub:" >> $GITHUB_STEP_SUMMARY
                  echo "- formulablu/drivers-api:latest" >> $GITHUB_STEP_SUMMARY
                  echo "- formulablu/teams-api:latest" >> $GITHUB_STEP_SUMMARY
                  echo "- formulablu/tracks-api:latest" >> $GITHUB_STEP_SUMMARY
                  echo "- formulablu/races-api:latest" >> $GITHUB_STEP_SUMMARY
                  echo "- formulablu/seasons-api:latest" >> $GITHUB_STEP_SUMMARY
                  echo "- formulablu/events-api:latest" >> $GITHUB_STEP_SUMMARY
                  echo "- formulablu/results-api:latest" >> $GITHUB_STEP_SUMMARY
                  echo "- formulablu/api-gateway:latest" >> $GITHUB_STEP_SUMMARY
                  echo "" >> $GITHUB_STEP_SUMMARY
                  echo "### Image tags:" >> $GITHUB_STEP_SUMMARY
                  echo "- Latest: \`latest\`" >> $GITHUB_STEP_SUMMARY
                  echo "- Commit-specific: \`${{ github.sha }}\`" >> $GITHUB_STEP_SUMMARY
                  echo "" >> $GITHUB_STEP_SUMMARY
                  echo "### Next steps:" >> $GITHUB_STEP_SUMMARY
                  echo "1. Deploy to Kubernetes using the updated manifests" >> $GITHUB_STEP_SUMMARY
                  echo "2. Verify all services are running correctly" >> $GITHUB_STEP_SUMMARY
                  echo "3. Run health checks on all endpoints" >> $GITHUB_STEP_SUMMARY
